<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>some writings from a humblelistener</title>
    <description></description>
    <link>https://humblelistener.github.io/</link>
    <atom:link href="https://humblelistener.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 11 Jun 2017 21:16:43 +1000</pubDate>
    <lastBuildDate>Sun, 11 Jun 2017 21:16:43 +1000</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Beta Environment configuration on AWS</title>
        <description>&lt;h2 id=&quot;beta-environment-configuration-for-large-scale-application-hosted-on-aws&quot;&gt;BETA Environment configuration for large scale application hosted on AWS&lt;/h2&gt;

&lt;p&gt;This is in continuation to the &lt;a href=&quot;http://humblelistener.github.io/2017/05/04/When-you-lose-confidence-in-code/&quot;&gt;previous post&lt;/a&gt;, I wrote about a situation where it was getting hard to deploy a particular application. I also mentioned how having a blue green like beta environment would help validate the behaviours of the system in near realtime without having a big impact on neither business or your end users.&lt;/p&gt;

&lt;h3 id=&quot;aws-weighted-load-balancing&quot;&gt;AWS Weighted load balancing&lt;/h3&gt;
&lt;p&gt;The solution proposed leveraged on the capability of load balancers to weigh the load to two different server cluster so that the behaviour can be validated in the production without great impact.&lt;/p&gt;

&lt;p&gt;With that in mind in the time in between I was spiking different options in AWS ecosystem to understand how such an architecture can be built.&lt;/p&gt;

&lt;h4 id=&quot;load-balancers-that-cannot-do-custom-weighing&quot;&gt;Load balancers that cannot do custom weighing&lt;/h4&gt;
&lt;p&gt;This was a big surprise, I was hoping a lot on AWS &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/applicationloadbalancer/&quot;&gt;Application Load Balancer&lt;/a&gt; or &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/classicloadbalancer/&quot;&gt;Elastic Load Balancer&lt;/a&gt; to be able to support this easily.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Isn’t it a fair expectation to have weighted routing (weighted round robin anyone?) in a load balancer AWS?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To my surprise, neither ALB or ELB in its current form is capable of doing it. Seriously yes, I contacted support and they confirmed it.&lt;/p&gt;

&lt;p&gt;However, their managed DNS service - &lt;a href=&quot;https://aws.amazon.com/route53/&quot;&gt;Route 53&lt;/a&gt; supports it. While it is a relief, given we are invested in AWS at the moment, it does come with the limitation that DNS caching can be tricky, the residual connections to a server that is rolled back is possible.&lt;/p&gt;

&lt;h3 id=&quot;the-winning-solution-design&quot;&gt;The winning solution design&lt;/h3&gt;
&lt;p&gt;So after being surprised by load balancers in AWS and with the only option of doing it with a combination of Route 53 and ALB’s, this is what we came up with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/humblelistener/humblelistener.github.io/raw/sources/assets/BetaABtesting%20diagram.png&quot; alt=&quot;Solution design for Beta AB set up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The gif provides a better picture on spike and how it will work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/humblelistener/humblelistener.github.io/raw/sources/assets/betaenvlsapp.gif&quot; alt=&quot;how it works!&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-are-the-stated-advantages&quot;&gt;What are the stated advantages&lt;/h3&gt;

&lt;p&gt;I did briefly touch about it in the &lt;a href=&quot;http://humblelistener.github.io/2017/05/04/When-you-lose-confidence-in-code/&quot;&gt;previous post&lt;/a&gt;. In the hindsight, it is easy to explain why it is required for us now for our line of business application and how it might apply to you,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reduce impact of business when improving the system.&lt;/li&gt;
  &lt;li&gt;Provide a safe environment for technical improvements on the platform.&lt;/li&gt;
  &lt;li&gt;A ground work for to enable iterating on the software effectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now that spike is done, the next step is the big test. We have to create a build and deployment pipeline to deploy in such an environment. Wish me good luck with it. I will share my experience as I finish each step.&lt;/p&gt;

&lt;p&gt;In the meanwhile, If you find this useful or have any better ways of achieving this please do leave a note and I will be very happy.&lt;/p&gt;

&lt;p&gt;Till then, Cheers!&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Jun 2017 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2017/06/11/beta-environment-on-aws-for-large-monolith-applications/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2017/06/11/beta-environment-on-aws-for-large-monolith-applications/</guid>
        
        
        <category>Solution design</category>
        
        <category>Beta testing</category>
        
        <category>AB testing</category>
        
        <category>AWS Beta testing</category>
        
      </item>
    
      <item>
        <title>What do you do when you lose confidence in code?</title>
        <description>&lt;h1 id=&quot;what-do-you-do-when-you-lose-confidence-in-code&quot;&gt;What do you do when you lose confidence in code?&lt;/h1&gt;

&lt;p&gt;This is happening to me.&lt;/p&gt;

&lt;p&gt;One of the inherited product I have is so complex that investing time and money on any of the following feels useless.&lt;/p&gt;

&lt;h3 id=&quot;unit-tests&quot;&gt;Unit tests&lt;/h3&gt;
&lt;p&gt;The technology literally doesn’t bend to write unit tests. I know the rebel in you telling that there should be a way to write unit tests on it. But I say, it is not worth it.&lt;/p&gt;

&lt;h3 id=&quot;functional-ui-tests&quot;&gt;Functional UI tests&lt;/h3&gt;
&lt;p&gt;Even if I overcome the response time, feedback cycle and brittleness of the test suite, It is hard to convince myself that a good coverage can be achieved without large efforts.&lt;/p&gt;

&lt;h3 id=&quot;consumer-driven-contracts&quot;&gt;Consumer-driven contracts&lt;/h3&gt;
&lt;p&gt;Wish I can find a way to do this in the given technology. The complex branching, conditional flows and data-driven decisions in the system make me think even if I magic a way to do consumer driven contracts on this system, I will age by the time I set up contracts with decent coverage.&lt;/p&gt;

&lt;h3 id=&quot;manualexploratory-testing&quot;&gt;Manual/Exploratory testing&lt;/h3&gt;
&lt;p&gt;God forbid, this is the option that we are relying currently on the product along with some basic functional UI test coverage. As with any manual work, it has a big gap for human error and hell a lot of time it will take if every code path being affected is to be tested, especially when trying to change the underlying concepts of the system.&lt;/p&gt;

&lt;p&gt;In such a state, it is not surprising that there is a urge to hide under the desk after the deploy button is clicked every time.&lt;/p&gt;

&lt;h2 id=&quot;where-is-the-hope&quot;&gt;Where is the hope?&lt;/h2&gt;
&lt;p&gt;The last hope, I am thinking of pursuing is to set up a beta environment and set up a traffic splitting between live and beta environment. A traffic split that can be finely controlled. So any risky change can be deployed to a variable percentage of users, monitor and decide to increase of decrease the percentage over time with confidence.&lt;/p&gt;

&lt;p&gt;This is not a new technique, this is similar to A/B testing. Nginx like proxies and load balancers pioneered it.&lt;/p&gt;

&lt;p&gt;In this particular case, I am thinking of pursuing AWS’s Application load balancer to achieve it.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://aws.amazon.com/blogs/devops/introducing-application-load-balancer-unlocking-and-optimizing-architectures/&quot;&gt;A/B testing section in the AWS Load balancing documentation here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I shall share more details on how it went. In the meanwhile, I am to learn from your experience, if you leave comments.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 May 2017 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2017/05/04/When-you-lose-confidence-in-code/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2017/05/04/When-you-lose-confidence-in-code/</guid>
        
        
        <category>software testing</category>
        
        <category>software engineering</category>
        
        <category>A/B testing</category>
        
        <category>Traffic splitting</category>
        
      </item>
    
      <item>
        <title>Psychological safety - Building high performance team</title>
        <description>&lt;h2 id=&quot;psychological-safety&quot;&gt;Psychological safety&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Building high performance team series&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before I realized, my interest in software engineering and building quality software lead me to having a passion in building high performance team.&lt;/p&gt;

&lt;p&gt;In pursuing it, I stumbled on to how &lt;em&gt;Psychological safety&lt;/em&gt; is so important in building a high performance team.&lt;/p&gt;

&lt;p&gt;In this post, I am going to put down my learnings, observations and materials that helped me understand this concept.&lt;/p&gt;

&lt;h3 id=&quot;understanding-psychological-safety&quot;&gt;Understanding Psychological safety&lt;/h3&gt;

&lt;p&gt;As much as it sounds like a hifi term, every individual would have definitely experienced it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is that situation when working with a group of people where you find yourselves comfortable to share your thoughts, ideas and opinions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;where you feel you are accepted and respected&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;where you don’t have to be worried about being ridiculed, humiliated or punished&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Chances are some of us would have experienced it several times in their work life. Sometimes where they just occurred accidentally (more fortunately) or in other occasions after spending a good amount of time within the same working group.&lt;/p&gt;

&lt;p&gt;Either way it would have been the most productive working group. Most of us will have some nice memories of such working groups that we cherish thinking about every now and then.&lt;/p&gt;

&lt;p&gt;The challenge however is to understand how to create a environment that fosters such a set up.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-psychologically-safe-environment&quot;&gt;Creating a psychologically safe environment&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://g.co/kgs/z2Lcwf&quot;&gt;Amy C. Edmondson&lt;/a&gt; a notable thought leader in her &lt;a href=&quot;https://www.youtube.com/watch?v=LhoLuui9gX8&quot;&gt;TED talk “Building a psychologically safe workplace”&lt;/a&gt; outlines a set up that fosters psychological safety.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Frame the work as learning problem and not as execution problem&lt;/li&gt;
  &lt;li&gt;Acknowledge your own fallibility&lt;/li&gt;
  &lt;li&gt;Model curiosity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Much details about these paths are explained in her TED talk.&lt;/p&gt;

&lt;h3 id=&quot;some-clues&quot;&gt;Some clues&lt;/h3&gt;

&lt;p&gt;The following vocabulary helps developing listening skills around psychological safety.&lt;/p&gt;

&lt;h4 id=&quot;sounds-of-traps-in-your-team&quot;&gt;Sounds of traps in your team&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“I always felt like I had to prove myself”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I always felt like I had to be careful not to make mistakes around them”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“People would try to show authority by speaking louder or talking over each other”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“only a few members speak most of the time”&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;good-signals&quot;&gt;Good signals&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“we all felt like we could say anything to each other”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“No one worried that the rest of the team was judging them”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I got your back!”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Team sharing jokes”&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;myth&quot;&gt;Myth&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“building the best teams meant combining the best people”&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;impact-of-psychological-safety-on-team-performance&quot;&gt;Impact of Psychological safety on team performance&lt;/h3&gt;

&lt;p&gt;Below is the picture representing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development&quot;&gt;four stages of group development by Bruce Tuckman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-H9_AmIgf464/TaJeGbKuyQI/AAAAAAAAARs/H_lLhVAXyeQ/s1600/Tuckmans+model.png&quot; alt=&quot;forming storming norming performing&quot; /&gt;
image credit &lt;a href=&quot;http://www.aleanjourney.com/2011/04/stages-of-high-performance-teams.htmlhttp://www.aleanjourney.com/2011/04/stages-of-high-performance-teams.html&quot;&gt;www.aleanjourney.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A psychologically safe environment helps expedite forming and storming phase and get to norming and performing faster.&lt;/p&gt;

&lt;h4 id=&quot;closing-comments&quot;&gt;Closing comments&lt;/h4&gt;

&lt;p&gt;This post has taken inspirations from several publications and articles about Psychological safety. One of the noteworthy post, the &lt;a href=&quot;https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html?_r=0&quot;&gt;learnings of Psychological safety from google&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What are your thoughts?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What do you think helped you feel safe when last time you found yourselves in a safe group set up?&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Apr 2017 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2017/04/04/Psychological-safety/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2017/04/04/Psychological-safety/</guid>
        
        
        <category>high-performance-team</category>
        
      </item>
    
      <item>
        <title>Configure ssh on windows for using gitlab or github</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=G1cGAnFi8dQ&quot; title=&quot;Configure ssh on windows&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/G1cGAnFi8dQ/0.jpg&quot; alt=&quot;Configure ssh on windows for using git&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Mar 2017 00:00:00 +1100</pubDate>
        <link>https://humblelistener.github.io/2017/03/12/Ssh-configuring-on-windows/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2017/03/12/Ssh-configuring-on-windows/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>An Enabling CI system</title>
        <description>&lt;h1 id=&quot;my-two-cents-on-ci&quot;&gt;My two cents on CI,&lt;/h1&gt;

&lt;p&gt;One of the important features for agile continuously delivered Microservice is a lean process both in engineering and in systems. The CI system is critical to it. Abilities like&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Self-contained build specification&lt;/li&gt;
  &lt;li&gt;Simple specification&lt;/li&gt;
  &lt;li&gt;Good community support and references&lt;/li&gt;
  &lt;li&gt;No hassle of managing agents&lt;/li&gt;
  &lt;li&gt;Easy to onboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;immensely simplify and let the developers concentrate on delivering the working software.&lt;/p&gt;

&lt;p&gt;And Travis CI fits this bill, very well.&lt;/p&gt;

&lt;h2 id=&quot;a-brief-on-what-self-contained-build-specification&quot;&gt;A brief on what self contained build specification&lt;/h2&gt;

&lt;p&gt;If you can mention all about a built process in just one place, one file and include it along with the code in the same repository, in a convenient specification, &lt;em&gt;how awesome is it?&lt;/em&gt; That is exactly the Travis yml file.&lt;/p&gt;

&lt;p&gt;Of course there are other build systems like CircleCI, Codeship, AppVeyor (for Windows) etc that take the similar route.&lt;/p&gt;

&lt;h3 id=&quot;disadvantage-of-having-build-script-scattered&quot;&gt;Disadvantage of having build script scattered&lt;/h3&gt;
&lt;p&gt;Traditional build systems have this problem, where part of the scripts required for build-deploy pipeline gets included along with the source code in its repository, while the build agent also holds intelligence and knowledge has knowledge as to how to build and deploy.&lt;/p&gt;

&lt;p&gt;This scattered nature of such build process itself impedes the transparency and simplicity of a autonomous self contained system. This kind of system worked fine when the development team need not have to bother about deployment.&lt;/p&gt;

&lt;p&gt;This even worked when we need to deploy regularly but had an expert and his time to get this correct (remember the role called Build manager?). But, do we need need to depend on a expert every time? Especially with a microservice architecture, where new services come up every day? I say no.&lt;/p&gt;

&lt;h2 id=&quot;my-take-on-some-widespread-limitations-with-travis-ci&quot;&gt;My take on some widespread limitations with Travis CI&lt;/h2&gt;

&lt;h4 id=&quot;cannot-build-windows-based-net-code&quot;&gt;Cannot build windows based .NET code&lt;/h4&gt;
&lt;p&gt;This is only a limitation for time being, till we all move on to platform agnostic dotnet frameworks.&lt;/p&gt;

&lt;h4 id=&quot;cannot-pipe-the-build-process&quot;&gt;Cannot pipe the build process&lt;/h4&gt;
&lt;p&gt;This one came up several times when deciding on CI system. However for the last one year, I haven’t heard anyone needing it. In my opinion, the need for pipelining builds smells an incorrect coupling. Most of the times either
a. domain boundaries are incorrect, so we have to queue builds to get one functionality out
or
b. code boundaries are incorrect, so we have to get more than repo built to get a functionality out.&lt;/p&gt;

&lt;h4 id=&quot;only-limited-agents&quot;&gt;Only limited agents&lt;/h4&gt;
&lt;p&gt;If a build is taking less than 5 mins including deployment, Do you think the availability of agent will block you? I bet not. We have been living with 2 concurrent jobs / agents for almost one year. We currently have around 15 active repositories using Travis CI and haven’t had a blocking build situation.&lt;/p&gt;

&lt;p&gt;After all, when it is getting blocked, we can simply shell some money and get more concurrent jobs.&lt;/p&gt;

&lt;h4 id=&quot;what-is-your-ci-story&quot;&gt;What is your CI story?&lt;/h4&gt;
&lt;p&gt;Is something not working in your Microservice journey?&lt;/p&gt;

&lt;p&gt;What causes the most frustration in your CI process?&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Jun 2016 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2016/06/23/Enabling-Continuous-integration-system/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2016/06/23/Enabling-Continuous-integration-system/</guid>
        
        
        <category>programming</category>
        
        <category>continuous-integration</category>
        
        <category>continuous-deployment</category>
        
        <category>travis-ci</category>
        
      </item>
    
      <item>
        <title>Profile http requests made by webserver</title>
        <description>&lt;p&gt;Tracing http requests made from server&lt;/p&gt;

&lt;p&gt;Once in a while, we need to trace the http calls made from the web/app
server. It will be very useful especially in scenarios where you are
having performance problems with web services and not sure where to look
for. We all know fiddler is very useful in tracking the http calls from
the browser, but, put in right configuration this tool will be handy in
tracking web service calls as well. I am going to briefly write some of
the configurations that may have to be done for getting this working.
(consider its more of a personal reference document)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run your fiddler under the context of app pool user.&lt;/li&gt;
  &lt;li&gt;Recycle the app pool&lt;/li&gt;
  &lt;li&gt;The above steps did not solve your problem, under system.net element in your
web.config,
insert the following    &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;defaultProxy&amp;gt;
    &amp;lt;proxy autoDetect=&quot;true&quot; proxyaddress=&quot;http://127.0.0.1:8888&quot;/&amp;gt;        
  &amp;lt;/defaultProxy&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;If all this did not solve, ensure that fiddler is point to port 8888
(which is does by default)&lt;/li&gt;
  &lt;li&gt;sometimes fiddler though captures https
handshakes, it may not be able to decrypt the actual http requests In
such cases&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;goto fiddler options -&amp;amp;gt; Https tab, ensure &quot;Decrypt Https
traffic&quot;&lt;/code&gt;  is checked.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.telerik.com/fiddler/configure-fiddler/tasks/decrypthttps/&quot;&gt;Telerik fiddler documentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 20 May 2014 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2014/05/20/trace-webserver-service-http-calls/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2014/05/20/trace-webserver-service-http-calls/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Feature switches</title>
        <description>&lt;p&gt;Thought process behind feature &amp;amp; toggles.&lt;/p&gt;

&lt;p&gt;Off late Feature switches are a common practice in software development. The credit goes to short development sprints boosted by Agile practices, where the team works on a new feature / section that will be disabled (better term hidden away from user / are not part of the current processing flow) in the immediate release till all parts of the feature is complete and ready to be used.&lt;/p&gt;

&lt;p&gt;Software architects and engineers handle this problem using different tools and techniques.&lt;/p&gt;

&lt;p&gt;What is a feature?
To give some examples and put a definition of feature in context, a feature can be a new user interface component (like upgraded text area control in web app), upgrading of data store (moving to a new database), a change in the workflow or simply bringing in a new component into an existing process line (naively achieved using  if.. else clause).&lt;/p&gt;

&lt;p&gt;So, What are really features?
My definition - “feature is that it is a functional piece of a program or process that is already part of or going to be part of a software application.”&lt;/p&gt;

&lt;p&gt;The term Feature is clearly a functional programming term - the most relevant object oriented programming term that I can think of is a module.&lt;/p&gt;

&lt;p&gt;How a feature can be viewed from an Object oriented perspective?&lt;/p&gt;

&lt;p&gt;To define this in object oriented programming terms, a feature is a new implementation of an interface which will injected&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/bliki/FeatureToggle.html&quot;&gt;Martin Fowler reference on feature toggles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?SwitchStatementsSmell&quot;&gt;switch statement smells&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feature toggling should be restricted to only one point in code.
Typically entry point, which works well if the feature is user interface related.&lt;/p&gt;

&lt;p&gt;Incase of features that dont correspond to UI. The features must be designed to be toggled from dependency injection configuration. Typically a class like AutofacConfig.cs or similar.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Unity.DefaultContainer.Register(typeof(ILoginProvider), typeof(CookieBasedLoginProvider));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CookieBasedLoginProvider is a feature here.&lt;/p&gt;

&lt;p&gt;Lets say when the organization needs to have a TokenBasedAuthentication, simply a TokenBasedLoginProvider like feature can be implemented and switched directly.&lt;/p&gt;

&lt;p&gt;Depending on the feature switch, corresponding Provider can be injected. This way, we dont have to bother about rest of the application and can keep the change limited to the implementation and configuration.&lt;/p&gt;

&lt;p&gt;Advantages&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unit test only the feature implemented.&lt;/li&gt;
  &lt;li&gt;Minimal risk as modifications are limited to existing code&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 13 Jul 2013 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2013/07/13/feature-switching/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2013/07/13/feature-switching/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Moved on from Mindtree to Readify</title>
        <description>&lt;p&gt;For all those who did not know..&lt;/p&gt;

&lt;p&gt;I left Mindtree early May 2013 and joined Readify in Melbourne, Australia.&lt;/p&gt;

&lt;p&gt;I should call myself very fortunate to have secured a job while still ashore from Oz and to have joined this company.&lt;/p&gt;

&lt;p&gt;The best thing I can tell about Readify is the people.&lt;/p&gt;

&lt;p&gt;Most of them are &lt;code class=&quot;highlighter-rouge&quot;&gt;MVP&lt;/code&gt; in other or the other area.&lt;/p&gt;

&lt;p&gt;The environment and people are more welcoming than I actually expected. The organization has a friendly and open culture and puts real efforts in the professional development of the consultants.&lt;/p&gt;

&lt;p&gt;There are various programs and options available in the organization to quench all the type of thirst a software engineer could have.&lt;/p&gt;

&lt;p&gt;Readify has been on the Great Places to Work in Australia Institutes list of companies consistently for the last 3 or 4 years.
This year (2013) it was positioned at 15.&lt;/p&gt;

&lt;p&gt;Readify is the awarded the Partner of the year across world from Microsoft to their contribution to the Microsoft ecosystem.&lt;/p&gt;

&lt;p&gt;So, I started with them this May and have already touched upon a couple of gigs.. one for the Port of Melbourne corporation and another for seek.com.au.&lt;/p&gt;

&lt;p&gt;Currently in the seek.com.au’s gig, I am working along with highly motivated Seek’s team to develop their website.&lt;/p&gt;

&lt;p&gt;In this role, I will be using my client side MVC knowledge and experience are to be leveraged, which I am looking forward this as an opportunity to hone my skills in this space and learn a few interesting and new client side frameworks and tools.&lt;/p&gt;

&lt;p&gt;Catch you all in the next blog… thanks for reading..
Couple of references about Readify&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://readify.net/&quot;&gt;Readify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.greatplacetowork.com.au/best-companies/best-places-to-work-in-australia&quot;&gt;Great places to work in Australia&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2013 00:00:00 +1000</pubDate>
        <link>https://humblelistener.github.io/2013/05/21/resigned-from-mindtree/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2013/05/21/resigned-from-mindtree/</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Unbind element in knockout using cleanNode</title>
        <description>&lt;p&gt;Unbind element in Knockout using cleanNode&lt;/p&gt;

&lt;p&gt;Recently, I came upon this problem where my JavaScript events were firing multiple times,
I use both knockout and backbone in my application, where data-binding feature of knockout and Routing,  Events, history, Model of backbone are being used.&lt;/p&gt;

&lt;p&gt;Here are some gist of my code&lt;/p&gt;

&lt;p&gt;My nav view model shown below, has a movePrevious event, that is where the event is being triggered&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455383&quot; id=&quot;gist-4455383&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;By business view model handles the save group event as shown in the gist below&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455377&quot; id=&quot;gist-4455377&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;Here, though the “saveGroup” backbone event is being turned off during dispose the event still seemed to be firing.&lt;/p&gt;

&lt;p&gt;Further looking into my view, gist below&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455354&quot; id=&quot;gist-4455354&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;you can see that my view uses knockout click binding.&lt;/p&gt;

&lt;p&gt;Upon debugging the DOM element, I found that, for every time this view is being bound using ko.applyBinding the event is getting added to the dom element by knockout.&lt;/p&gt;

&lt;p&gt;So, when I click on the hyperlink, the event is firing the number of times that view is bound to the view model.&lt;/p&gt;

&lt;p&gt;To solve this, I have to unbind the view / DOM element every time before applying a fresh knockout binding.&lt;/p&gt;

&lt;p&gt;Fortunately, knockout had this feature already that is available through ko.cleanNode function.&lt;/p&gt;

&lt;p&gt;So, once I started calling this function every time before binding the view to view model the issue was fixed.&lt;/p&gt;

&lt;h3 id=&quot;points-to-note&quot;&gt;Points to note:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You have to unbind the DOM element / view every time before binding it with knockout again.&lt;/li&gt;
&lt;li&gt;Turn off the Backbone events before you are about to lose the reference to your JavaScript object.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;
While debugging this, I found &lt;a href=&quot;http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps&quot;&gt;this wonderful article&lt;/a&gt; that helped be understand the cleaning up required in javascript.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Jan 2013 00:00:00 +1100</pubDate>
        <link>https://humblelistener.github.io/2013/01/04/unbind-knockout-cleannode/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2013/01/04/unbind-knockout-cleannode/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Understanding optional parameters in c#</title>
        <description>&lt;p&gt;C# and its optional parameters - a language feature..&lt;/p&gt;

&lt;p&gt;Optional parameters is a language feature, the compiler is responsible for
translating the calls to methods with optional parameters to full call
with values.&lt;/p&gt;

&lt;p&gt;Look at this simple piece of code below,&amp;lt;/span&amp;gt;&lt;/p&gt;

&lt;p&gt;When you disassemble these methods, you will see that the C# compiler
actually replaced the call to TestMethod with one parameter to a call
with both the parameters.&lt;/p&gt;

&lt;p&gt;The implication is that methods utilizing optional parameters cannot be
bound at run time. The below line of code will not compile because, the
line is trying to utilize default value set in optional second parameter
of the TestMethod. However, because this bound only during the run time,
compiler will  not have any control to pass the default values like in
the screen shot. Hence this is currently limited by the compiler.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; Func&amp;lt;int, bool&amp;gt; func = TestMethod;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The work around is to simply bind the func to an anonymous method which
can have the call to TestMethod in its body. Like below,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; Func&amp;lt;int, bool&amp;gt; func = (value) =&amp;gt; TestMethod(value);&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Dec 2012 00:00:00 +1100</pubDate>
        <link>https://humblelistener.github.io/2012/12/16/understanding-optional-parameters-c/</link>
        <guid isPermaLink="true">https://humblelistener.github.io/2012/12/16/understanding-optional-parameters-c/</guid>
        
        
        <category>programming</category>
        
        <category>c#</category>
        
      </item>
    
  </channel>
</rss>
