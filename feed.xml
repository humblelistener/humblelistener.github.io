<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>some writings from a humblelistener</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 09 Apr 2017 00:40:29 +1000</pubDate>
    <lastBuildDate>Sun, 09 Apr 2017 00:40:29 +1000</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Psychological safety - Building high performance team</title>
        <description>&lt;h2 id=&quot;psychological-safety&quot;&gt;Psychological safety&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Building high performance team series&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before I realized, my interest in software engineering and building quality software lead me to having a passion in building high performance team.&lt;/p&gt;

&lt;p&gt;In pursuing it, I stumbled on to how &lt;em&gt;Psychological safety&lt;/em&gt; is so important in building a high performance team.&lt;/p&gt;

&lt;p&gt;In this post, I am going to put down my learnings, observations and materials that helped me understand this concept.&lt;/p&gt;

&lt;h3 id=&quot;understanding-psychological-safety&quot;&gt;Understanding Psychological safety&lt;/h3&gt;

&lt;p&gt;As much as it sounds like a hifi term, every individual would have definitely experienced it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is that situation when working with a group of people where you find yourselves comfortable to share your thoughts, ideas and opinions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;where you feel you are accepted and respected&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;where you don’t have to be worried about being ridiculed, humiliated or punished&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Chances are some of us would have experienced it several times in their work life. Sometimes where they just occurred accidentally (more fortunately) or in other occasions after spending a good amount of time within the same working group.&lt;/p&gt;

&lt;p&gt;Either way it would have been the most productive working group. Most of us will have some nice memories of such working groups that we cherish thinking about every now and then.&lt;/p&gt;

&lt;p&gt;The challenge however is to understand how to create a environment that fosters such a set up.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-psychologically-safe-environment&quot;&gt;Creating a psychologically safe environment&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://g.co/kgs/z2Lcwf&quot;&gt;Amy C. Edmondson&lt;/a&gt; a notable thought leader in her &lt;a href=&quot;https://www.youtube.com/watch?v=LhoLuui9gX8&quot;&gt;TED talk “Building a psychologically safe workplace”&lt;/a&gt; outlines a set up that fosters psychological safety.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Frame the work as learning problem and not as execution problem&lt;/li&gt;
  &lt;li&gt;Acknowledge your own fallibility&lt;/li&gt;
  &lt;li&gt;Model curiosity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Much details about these paths are explained in her TED talk.&lt;/p&gt;

&lt;h3 id=&quot;some-clues&quot;&gt;Some clues&lt;/h3&gt;

&lt;p&gt;The following vocabulary helps developing listening skills around psychological safety.&lt;/p&gt;

&lt;h4 id=&quot;sounds-of-traps-in-your-team&quot;&gt;Sounds of traps in your team&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“I always felt like I had to prove myself”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I always felt like I had to be careful not to make mistakes around them”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“People would try to show authority by speaking louder or talking over each other”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“only a few members speak most of the time”&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;good-signals&quot;&gt;Good signals&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“we all felt like we could say anything to each other”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“No one worried that the rest of the team was judging them”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I got your back!”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Team sharing jokes”&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;myth&quot;&gt;Myth&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;“building the best teams meant combining the best people”&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;impact-on-psychological-safety-on-team-performance&quot;&gt;Impact on Psychological safety on team performance&lt;/h3&gt;

&lt;p&gt;Below is the picture representing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development&quot;&gt;four stages of group development by Bruce Tuckman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-H9_AmIgf464/TaJeGbKuyQI/AAAAAAAAARs/H_lLhVAXyeQ/s1600/Tuckmans+model.png&quot; alt=&quot;forming storming norming performing&quot; /&gt;
image credit &lt;a href=&quot;http://www.aleanjourney.com/2011/04/stages-of-high-performance-teams.htmlhttp://www.aleanjourney.com/2011/04/stages-of-high-performance-teams.html&quot;&gt;www.aleanjourney.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A psychologically safe environment helps expedite forming and storming phase and get to norming and performing faster.&lt;/p&gt;

&lt;h4 id=&quot;closing-comments&quot;&gt;Closing comments&lt;/h4&gt;

&lt;p&gt;This post has taken inspirations from several publications and articles about Psychological safety. One of the noteworthy post what the &lt;a href=&quot;https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html?_r=0&quot;&gt;learnings of Psychological safety from google&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;** What are your thoughts? **&lt;/p&gt;

&lt;p&gt;** What do you think helped you feel safe when last time you found yourselves in a safe group set up? **&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Apr 2017 00:00:00 +1000</pubDate>
        <link>http://localhost:4000/2017/04/04/Psychological-safety/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/04/Psychological-safety/</guid>
        
        
        <category>high-performance-team</category>
        
      </item>
    
      <item>
        <title>Configure ssh on windows for using gitlab or github</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=G1cGAnFi8dQ&quot; title=&quot;Configure ssh on windows&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/G1cGAnFi8dQ/0.jpg&quot; alt=&quot;Configure ssh on windows for using git&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Mar 2017 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/2017/03/12/Ssh-configuring-on-windows/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/12/Ssh-configuring-on-windows/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>An Enabling CI system</title>
        <description>&lt;h1 id=&quot;my-two-cents-on-ci&quot;&gt;My two cents on CI,&lt;/h1&gt;

&lt;p&gt;One of the important features for agile continuously delivered Microservice is a lean process both in engineering and in systems. The CI system is critical to it. Abilities like&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Self-contained build specification&lt;/li&gt;
  &lt;li&gt;Simple specification&lt;/li&gt;
  &lt;li&gt;Good community support and references&lt;/li&gt;
  &lt;li&gt;No hassle of managing agents&lt;/li&gt;
  &lt;li&gt;Easy to onboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;immensely simplify and let the developers concentrate on delivering the working software.&lt;/p&gt;

&lt;p&gt;And Travis CI fits this bill, very well.&lt;/p&gt;

&lt;h2 id=&quot;a-brief-on-what-self-contained-build-specification&quot;&gt;A brief on what self contained build specification&lt;/h2&gt;

&lt;p&gt;If you can mention all about a built process in just one place, one file and include it along with the code in the same repository, in a convenient specification, &lt;em&gt;how awesome is it?&lt;/em&gt; That is exactly the Travis yml file.&lt;/p&gt;

&lt;p&gt;Of course there are other build systems like CircleCI, Codeship, AppVeyor (for Windows) etc that take the similar route.&lt;/p&gt;

&lt;h3 id=&quot;disadvantage-of-having-build-script-scattered&quot;&gt;Disadvantage of having build script scattered&lt;/h3&gt;
&lt;p&gt;Traditional build systems have this problem, where part of the scripts required for build-deploy pipeline gets included along with the source code in its repository, while the build agent also holds intelligence and knowledge has knowledge as to how to build and deploy.&lt;/p&gt;

&lt;p&gt;This scattered nature of such build process itself impedes the transparency and simplicity of a autonomous self contained system. This kind of system worked fine when the development team need not have to bother about deployment.&lt;/p&gt;

&lt;p&gt;This even worked when we need to deploy regularly but had an expert and his time to get this correct (remember the role called Build manager?). But, do we need need to depend on a expert every time? Especially with a microservice architecture, where new services come up every day? I say no.&lt;/p&gt;

&lt;h2 id=&quot;my-take-on-some-widespread-limitations-with-travis-ci&quot;&gt;My take on some widespread limitations with Travis CI&lt;/h2&gt;

&lt;h4 id=&quot;cannot-build-windows-based-net-code&quot;&gt;Cannot build windows based .NET code&lt;/h4&gt;
&lt;p&gt;This is only a limitation for time being, till we all move on to platform agnostic dotnet frameworks.&lt;/p&gt;

&lt;h4 id=&quot;cannot-pipe-the-build-process&quot;&gt;Cannot pipe the build process&lt;/h4&gt;
&lt;p&gt;This one came up several times when deciding on CI system. However for the last one year, I haven’t heard anyone needing it. In my opinion, the need for pipelining builds smells an incorrect coupling. Most of the times either
a. domain boundaries are incorrect, so we have to queue builds to get one functionality out
or
b. code boundaries are incorrect, so we have to get more than repo built to get a functionality out.&lt;/p&gt;

&lt;h4 id=&quot;only-limited-agents&quot;&gt;Only limited agents&lt;/h4&gt;
&lt;p&gt;If a build is taking less than 5 mins including deployment, Do you think the availability of agent will block you? I bet not. We have been living with 2 concurrent jobs / agents for almost one year. We currently have around 15 active repositories using Travis CI and haven’t had a blocking build situation.&lt;/p&gt;

&lt;p&gt;After all, when it is getting blocked, we can simply shell some money and get more concurrent jobs.&lt;/p&gt;

&lt;h4 id=&quot;what-is-your-ci-story&quot;&gt;What is your CI story?&lt;/h4&gt;
&lt;p&gt;Is something not working in your Microservice journey?&lt;/p&gt;

&lt;p&gt;What causes the most frustration in your CI process?&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Jun 2016 00:00:00 +1000</pubDate>
        <link>http://localhost:4000/2016/06/23/Enabling-Continuous-integration-system/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/06/23/Enabling-Continuous-integration-system/</guid>
        
        
        <category>programming</category>
        
        <category>continuous-integration</category>
        
        <category>continuous-deployment</category>
        
        <category>travis-ci</category>
        
      </item>
    
      <item>
        <title>Profile http requests made by webserver</title>
        <description>&lt;p&gt;Tracing http requests made from server&lt;/p&gt;

&lt;p&gt;Once in a while, we need to trace the http calls made from the web/app
server. It will be very useful especially in scenarios where you are
having performance problems with web services and not sure where to look
for. We all know fiddler is very useful in tracking the http calls from
the browser, but, put in right configuration this tool will be handy in
tracking web service calls as well. I am going to briefly write some of
the configurations that may have to be done for getting this working.
(consider its more of a personal reference document)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run your fiddler under the context of app pool user.&lt;/li&gt;
  &lt;li&gt;Recycle the app pool&lt;/li&gt;
  &lt;li&gt;The above steps did not solve your problem, under system.net element in your
web.config,
insert the following    &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;defaultProxy&amp;gt;
    &amp;lt;proxy autoDetect=&quot;true&quot; proxyaddress=&quot;http://127.0.0.1:8888&quot;/&amp;gt;        
  &amp;lt;/defaultProxy&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;If all this did not solve, ensure that fiddler is point to port 8888
(which is does by default)&lt;/li&gt;
  &lt;li&gt;sometimes fiddler though captures https
handshakes, it may not be able to decrypt the actual http requests In
such cases&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;goto fiddler options -&amp;amp;gt; Https tab, ensure &quot;Decrypt Https
traffic&quot;&lt;/code&gt;  is checked.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.telerik.com/fiddler/configure-fiddler/tasks/decrypthttps/&quot;&gt;Telerik fiddler documentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 20 May 2014 00:00:00 +1000</pubDate>
        <link>http://localhost:4000/2014/05/20/trace-webserver-service-http-calls/</link>
        <guid isPermaLink="true">http://localhost:4000/2014/05/20/trace-webserver-service-http-calls/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Feature switches</title>
        <description>&lt;p&gt;Thought process behind feature &amp;amp; toggles.&lt;/p&gt;

&lt;p&gt;Off late Feature switches are a common practice in software development. The credit goes to short development sprints boosted by Agile practices, where the team works on a new feature / section that will be disabled (better term hidden away from user / are not part of the current processing flow) in the immediate release till all parts of the feature is complete and ready to be used.&lt;/p&gt;

&lt;p&gt;Software architects and engineers handle this problem using different tools and techniques.&lt;/p&gt;

&lt;p&gt;What is a feature?
To give some examples and put a definition of feature in context, a feature can be a new user interface component (like upgraded text area control in web app), upgrading of data store (moving to a new database), a change in the workflow or simply bringing in a new component into an existing process line (naively achieved using  if.. else clause).&lt;/p&gt;

&lt;p&gt;So, What are really features?
My definition - “feature is that it is a functional piece of a program or process that is already part of or going to be part of a software application.”&lt;/p&gt;

&lt;p&gt;The term Feature is clearly a functional programming term - the most relevant object oriented programming term that I can think of is a module.&lt;/p&gt;

&lt;p&gt;How a feature can be viewed from an Object oriented perspective?&lt;/p&gt;

&lt;p&gt;To define this in object oriented programming terms, a feature is a new implementation of an interface which will injected&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/bliki/FeatureToggle.html&quot;&gt;Martin Fowler reference on feature toggles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?SwitchStatementsSmell&quot;&gt;switch statement smells&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feature toggling should be restricted to only one point in code.
Typically entry point, which works well if the feature is user interface related.&lt;/p&gt;

&lt;p&gt;Incase of features that dont correspond to UI. The features must be designed to be toggled from dependency injection configuration. Typically a class like AutofacConfig.cs or similar.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Unity.DefaultContainer.Register(typeof(ILoginProvider), typeof(CookieBasedLoginProvider));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CookieBasedLoginProvider is a feature here.&lt;/p&gt;

&lt;p&gt;Lets say when the organization needs to have a TokenBasedAuthentication, simply a TokenBasedLoginProvider like feature can be implemented and switched directly.&lt;/p&gt;

&lt;p&gt;Depending on the feature switch, corresponding Provider can be injected. This way, we dont have to bother about rest of the application and can keep the change limited to the implementation and configuration.&lt;/p&gt;

&lt;p&gt;Advantages&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unit test only the feature implemented.&lt;/li&gt;
  &lt;li&gt;Minimal risk as modifications are limited to existing code&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 13 Jul 2013 00:00:00 +1000</pubDate>
        <link>http://localhost:4000/2013/07/13/feature-switching/</link>
        <guid isPermaLink="true">http://localhost:4000/2013/07/13/feature-switching/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Moved on from Mindtree to Readify</title>
        <description>&lt;p&gt;For all those who did not know..&lt;/p&gt;

&lt;p&gt;I left Mindtree early May 2013 and joined Readify in Melbourne, Australia.&lt;/p&gt;

&lt;p&gt;I should call myself very fortunate to have secured a job while still ashore from Oz and to have joined this company.&lt;/p&gt;

&lt;p&gt;The best thing I can tell about Readify is the people.&lt;/p&gt;

&lt;p&gt;Most of them are &lt;code class=&quot;highlighter-rouge&quot;&gt;MVP&lt;/code&gt; in other or the other area.&lt;/p&gt;

&lt;p&gt;The environment and people are more welcoming than I actually expected. The organization has a friendly and open culture and puts real efforts in the professional development of the consultants.&lt;/p&gt;

&lt;p&gt;There are various programs and options available in the organization to quench all the type of thirst a software engineer could have.&lt;/p&gt;

&lt;p&gt;Readify has been on the Great Places to Work in Australia Institutes list of companies consistently for the last 3 or 4 years.
This year (2013) it was positioned at 15.&lt;/p&gt;

&lt;p&gt;Readify is the awarded the Partner of the year across world from Microsoft to their contribution to the Microsoft ecosystem.&lt;/p&gt;

&lt;p&gt;So, I started with them this May and have already touched upon a couple of gigs.. one for the Port of Melbourne corporation and another for seek.com.au.&lt;/p&gt;

&lt;p&gt;Currently in the seek.com.au’s gig, I am working along with highly motivated Seek’s team to develop their website.&lt;/p&gt;

&lt;p&gt;In this role, I will be using my client side MVC knowledge and experience are to be leveraged, which I am looking forward this as an opportunity to hone my skills in this space and learn a few interesting and new client side frameworks and tools.&lt;/p&gt;

&lt;p&gt;Catch you all in the next blog… thanks for reading..
Couple of references about Readify&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://readify.net/&quot;&gt;Readify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.greatplacetowork.com.au/best-companies/best-places-to-work-in-australia&quot;&gt;Great places to work in Australia&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2013 00:00:00 +1000</pubDate>
        <link>http://localhost:4000/2013/05/21/resigned-from-mindtree/</link>
        <guid isPermaLink="true">http://localhost:4000/2013/05/21/resigned-from-mindtree/</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Unbind element in knockout using cleanNode</title>
        <description>&lt;p&gt;Unbind element in Knockout using cleanNode&lt;/p&gt;

&lt;p&gt;Recently, I came upon this problem where my JavaScript events were firing multiple times,
I use both knockout and backbone in my application, where data-binding feature of knockout and Routing,  Events, history, Model of backbone are being used.&lt;/p&gt;

&lt;p&gt;Here are some gist of my code&lt;/p&gt;

&lt;p&gt;My nav view model shown below, has a movePrevious event, that is where the event is being triggered&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455383&quot; id=&quot;gist-4455383&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;By business view model handles the save group event as shown in the gist below&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455377&quot; id=&quot;gist-4455377&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;Here, though the “saveGroup” backbone event is being turned off during dispose the event still seemed to be firing.&lt;/p&gt;

&lt;p&gt;Further looking into my view, gist below&lt;/p&gt;
&lt;div class=&quot;gistLoad&quot; data-id=&quot;4455354&quot; id=&quot;gist-4455354&quot;&gt;
Loading ....&lt;/div&gt;

&lt;p&gt;you can see that my view uses knockout click binding.&lt;/p&gt;

&lt;p&gt;Upon debugging the DOM element, I found that, for every time this view is being bound using ko.applyBinding the event is getting added to the dom element by knockout.&lt;/p&gt;

&lt;p&gt;So, when I click on the hyperlink, the event is firing the number of times that view is bound to the view model.&lt;/p&gt;

&lt;p&gt;To solve this, I have to unbind the view / DOM element every time before applying a fresh knockout binding.&lt;/p&gt;

&lt;p&gt;Fortunately, knockout had this feature already that is available through ko.cleanNode function.&lt;/p&gt;

&lt;p&gt;So, once I started calling this function every time before binding the view to view model the issue was fixed.&lt;/p&gt;

&lt;h3 id=&quot;points-to-note&quot;&gt;Points to note:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You have to unbind the DOM element / view every time before binding it with knockout again.&lt;/li&gt;
&lt;li&gt;Turn off the Backbone events before you are about to lose the reference to your JavaScript object.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;
While debugging this, I found &lt;a href=&quot;http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps&quot;&gt;this wonderful article&lt;/a&gt; that helped be understand the cleaning up required in javascript.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Jan 2013 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/2013/01/04/unbind-knockout-cleannode/</link>
        <guid isPermaLink="true">http://localhost:4000/2013/01/04/unbind-knockout-cleannode/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Understanding optional parameters in c#</title>
        <description>&lt;p&gt;C# and its optional parameters - a language feature..&lt;/p&gt;

&lt;p&gt;Optional parameters is a language feature, the compiler is responsible for
translating the calls to methods with optional parameters to full call
with values.&lt;/p&gt;

&lt;p&gt;Look at this simple piece of code below,&amp;lt;/span&amp;gt;&lt;/p&gt;

&lt;p&gt;When you disassemble these methods, you will see that the C# compiler
actually replaced the call to TestMethod with one parameter to a call
with both the parameters.&lt;/p&gt;

&lt;p&gt;The implication is that methods utilizing optional parameters cannot be
bound at run time. The below line of code will not compile because, the
line is trying to utilize default value set in optional second parameter
of the TestMethod. However, because this bound only during the run time,
compiler will  not have any control to pass the default values like in
the screen shot. Hence this is currently limited by the compiler.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; Func&amp;lt;int, bool&amp;gt; func = TestMethod;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The work around is to simply bind the func to an anonymous method which
can have the call to TestMethod in its body. Like below,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; Func&amp;lt;int, bool&amp;gt; func = (value) =&amp;gt; TestMethod(value);&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Dec 2012 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/2012/12/16/understanding-optional-parameters-c/</link>
        <guid isPermaLink="true">http://localhost:4000/2012/12/16/understanding-optional-parameters-c/</guid>
        
        
        <category>programming</category>
        
        <category>c#</category>
        
      </item>
    
      <item>
        <title>Understanding async keyword in c#</title>
        <description>&lt;p&gt;Understanding how async keyword works in c#&lt;/p&gt;

&lt;p&gt;So, c# 5 introduced a new keyword to simplify asynchronous programming
by the introduction of await keyword. Functionally this keyword will
wait for the completion of asynchronous operation that was started.&lt;/p&gt;

&lt;p&gt;Technically though it has a complex contract, take a look at the same
code below&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;internal class Class3
{
    public async Task&amp;lt;PersonDetails[]&amp;gt; GetPersonDetails(string personName)
    {
      var personGoogleDetails = CollectPersonDetailFromGoogle(personName);
      DoSomeComplexWork();
      PersonDetails[] personDetails = await personGoogleDetails;
      CallSomeSimpleWork();

      return personDetails;
    }

    private CustomAwaitable CollectPersonDetailFromGoogle(string personName)
    {
      return null;
    }

    private void CallSomeSimpleWork()
    {
      throw new NotImplementedException();
    }

    private void DoSomeComplexWork()
    {
      throw new NotImplementedException();
    }    
}

internal class CustomAwaitable
{
  public CustomAwaiter&amp;lt;PersonDetails[]&amp;gt; GetAwaiter()
  {
    return new CustomAwaiter&amp;lt;PersonDetails[]&amp;gt;();
  }
}

internal class CustomAwaiter&amp;lt;T&amp;gt; : System.Runtime.CompilerServices.INotifyCompletion
{
  public bool IsCompleted { get; set; }
  public void OnCompleted(Action continuation)
  {
    throw new NotImplementedException();
  }

  public T GetResult()
  {
    return default(T);
  }
}

internal class PersonDetails
{
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are few things, that I want to bring it up,&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GetPersonDetails()&lt;/code&gt; method’s signature says it will return &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&amp;lt;PersonDetails&amp;gt;&lt;/code&gt;
however the return statement just returns PersonDetails[] and the
compiler is happy about it.&lt;/li&gt;
  &lt;li&gt;Look at the dis assembler screen shot
and see &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;GetPersonDetails&amp;gt;d_0&lt;/code&gt; which is an anonymous
class created. Any idea why?&amp;lt;/span&amp;gt;&lt;/li&gt;
  &lt;li&gt;Look at use of “await” keyword, though
my method &lt;code class=&quot;highlighter-rouge&quot;&gt;CollectPersonDetailFromGoogle&lt;/code&gt; is not a &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt; or
&lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt;, the compiler is still happy with that.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 16 Dec 2012 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/2012/12/16/understanding-async-keyword-c/</link>
        <guid isPermaLink="true">http://localhost:4000/2012/12/16/understanding-async-keyword-c/</guid>
        
        
        <category>programming</category>
        
        <category>c#</category>
        
      </item>
    
      <item>
        <title>SOLID principles - primer</title>
        <description>&lt;p&gt;SOLID Principles - primer&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S –Single responsibility principle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia defines it as &lt;strong&gt;every class should have a single
responsibility, and that responsibility should be entirely encapsulated
by the class&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The idea behind this principle is that, any change should only be
limited to a class that is responsible for that feature. None of the
dependent classes or consumers should have to be modified to adjust to
this change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is the advantage?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By following this principle, we can limit the number of places we have
to change the code for a single change in a feature. This directs
reduces the cyclomatic complexity.&lt;/p&gt;

&lt;p&gt;Other than the metric advantage mentioned above, following this
principle leads to&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simplicity in the design / code&lt;/li&gt;
  &lt;li&gt;Makes design / code easily understandable&lt;/li&gt;
  &lt;li&gt;Increases maintainability and increases engineers good karma&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;O –Open/closed principle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia definition says &lt;em&gt;software entities (classes, modules,
functions, etc.) should be open for extension, but closed for
modification&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you know the code that you are writing is susceptible to change when
you are writing it – it is a good candidate for applying this principle.
However if the developer is new for the domain and is not able to
predict that the possible change coming (which happens most of the
time), it is fine to write the simplest piece of code that works.&lt;/p&gt;

&lt;p&gt;Although, the moment he realizes that there is change coming, he should
be ready to refactor and apply this principle. The next time change
comes, the code modification should be an extension rather than
modification.&lt;/p&gt;

&lt;p&gt;This technique can be summarized by the below funny statements&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Fool me once, shame on you; fool me twice, shame on me”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally any software design should be closed for modifications and open
for extensions – which is very tough. The best person to guess this is
the developer / designer – who will be the only person knowing what
areas of his code are susceptible to change.&lt;/p&gt;

&lt;p&gt;The design patterns that come to rescue when you encounter candidates
for this principle are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Template method pattern – Rely on abstraction&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Strategy pattern – rely on composition.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or simply sometimes adding parameters to the function can be very
effective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;L – Liskov Substitution Principle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia definition - &lt;em&gt;“if S is a subtype of T, then objects of type T
may be replaced with objects of type ”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The converse of this theory in simple terms is - “&lt;em&gt;If it looks like a
duck and sounds like a duck, but needs batteries then it may well not be
a substitutable duck&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;There is paradigm shift between how you look at inheritance in this
principle - “IS-A” relation is replaced by “IS-SUBSTITUTABLE-FOR”
relationship.&lt;/p&gt;

&lt;p&gt;The primary objective of this design is - the calling code should not
know the difference between the base type and a sub type. Irrespective
of the actual type being passed, the calling code should be able to do
all the operation.&lt;/p&gt;

&lt;p&gt;Another variance where this principle can be applied is when the subtype
does not implement only one (or few) operations of the base type. This
could well mean that they are not exactly replaceable substitutes.&lt;/p&gt;

&lt;p&gt;This happens when either when the interfaces or base classes are not
properly segregated (candidate for the next principle: Interface
segregation) or when “IS-SUBSTITUTABLE-FOR” principle is simply broken.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do you identify them in your code?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Any part of code where you have to convert a base type to a specific
type to do an operation – then the code violates this principle and
requires refactoring.&lt;/p&gt;

&lt;p&gt;Any operation that can be performed on a subtype but cannot be done on
another subtype with the same parent, then this principle is
compromised.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I – Interface Segregation Principle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this principle, class and interface are interchangeable terms. Any
class is considered an implementation of interface although interface
may not have been abstracted.&lt;/p&gt;

&lt;p&gt;I wasn’t able to find a slick definition of this principle in wiki – so
let use this&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Clients should not be forced to depend on methods they do not use.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Corollary – prefer small, cohesive interfaces to “fat” interfaces.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Whenever possible, let the client define the interface.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When client unit needs only a few operations, support only those
operation from your interface – any other methods in the interface are
just nonsense for the client and could increase complexity of the code.&lt;/p&gt;

&lt;p&gt;Interface segregation violations result in classes that depend on things
they do not need, increasing coupling and reducing flexibility and
maintainability.&lt;/p&gt;

&lt;p&gt;Interfaces with unimplemented interface methods are also candid for this
principle (as they are for Liskov Substitution principle)&lt;/p&gt;

&lt;p&gt;Doctor’s prescription notes for interface segregation&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Client references an interface but only uses a portion of it – refactor
it using façade without touching the interface until the more pain is
localized in this region (notice façade pattern to the rescue).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you have a fat interface and facing problem with it – consider
breaking what you need into smaller interface and let the fat interface
inherit this new one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you have problem using a fat interface that you do not own – consider
creating a smaller interface that acts as an adapter around the fat
interface and use it – (notice adapter pattern to the rescue).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;D – Dependency Inversion / Inversion of control&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Off late this principle has become very common with the advent of a
wonderful reference implementation available with us in the form of
ASP.NET MVC Framework – This statement is targeted only at .NET
developers.&lt;/p&gt;

&lt;p&gt;Wikipedia definition –
a. &lt;em&gt;High level
modules should not depend on low level modules. Both should depend on
abstractions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;b. &lt;em&gt;Abstractions should not depend upon details. Details should
depend upon abstractions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One very good example that I read about that suits well for dependency
inversion are electrical plugs/ sockets. How? All electrical appliance
depend on electricity, just because it is dependent they are not
directly connected to electrical wires running behind the wall. Instead
we use plugs / sockets. By using this we invert the dependency by giving
the flexibility of connecting to a wire behind the wall or connecting to
UPS box based on the need. Because appliances are not bothered where the
electricity comes from it makes sense. Here plugs / sockets are
abstractions. Appliance and Electricity are details – which depend on
the abstractions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do I identify the candid’s for this principle?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Anything that you are not able to unit test effectively without
depending on the environment are all candid’s for this principle.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do I make them follow this principle?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In simple one line answer is “use dependency injection”.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do I identify them when designing or implementing?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Honestly identify the dependencies that are in your implementation. Once
you are able to identify it, design your code around to allow these
dependencies to be injected from outside.&lt;/p&gt;

&lt;p&gt;I know this statement is cruel, considering Framework classes and static
methods from Framework. Considers Microsoft Fakes if you are bothered
about it. Especially if you are working on a maintenance project and
trying to follow this principle you will appreciate Fakes library’s –
shim concept.&lt;/p&gt;

&lt;p&gt;For dependency injection again, there are multiple frameworks available
like (Unity, Ninject etc.. ) which all really good.&lt;/p&gt;

&lt;p&gt;More references on dependency injection and this principle&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Dependency injection by Martin Fowler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/hh549175.aspx&quot;&gt;More reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I wrote, I realized that I can only the surface of these principles
here. You can consider this place to get an idea of these principles and
can dive deep in internet based on the principles of your interest.&lt;/p&gt;

&lt;p&gt;I also suggest reading &lt;strong&gt;&lt;em&gt;Robert C Martin’s – “Clean Code”&lt;/em&gt;&lt;/strong&gt; book. I strongly feel every software engineer should have read this book.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Nov 2012 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/2012/11/12/SOLID-oo-principles/</link>
        <guid isPermaLink="true">http://localhost:4000/2012/11/12/SOLID-oo-principles/</guid>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
